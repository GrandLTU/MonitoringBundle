parameters:
    ongr_monitoring.command_listener.class: ONGR\MonitoringBundle\EventListener\CommandListener
    ongr_monitoring.terminate_listener.class: ONGR\MonitoringBundle\EventListener\TerminateListener
    ongr_monitoring.event_parser.class: ONGR\MonitoringBundle\Helper\EventParser
    ongr_monitoring.event_id_manager.class: ONGR\MonitoringBundle\Service\EventIdManager

    ongr_monitoring.metric_collector.class: ONGR\MonitoringBundle\Metric\CollectorService
    ongr_monitoring.metric.document_count.class: ONGR\MonitoringBundle\Metric\DocumentCount

services:
    ongr_monitoring.event_id_manager:
        class: %ongr_monitoring.event_id_manager.class%

    ongr_monitoring.event_parser:
        class: %ongr_monitoring.event_parser.class%
    ongr_monitoring.command_listener:
        class: %ongr_monitoring.command_listener.class%
        calls:
            - [setManager, [@ongr_monitoring.es_manager]]
            - [setEventParser, [@ongr_monitoring.event_parser]]
            - [setEventIdManager, [@ongr_monitoring.event_id_manager]]
        tags:
            - { name: kernel.event_listener, event: console.command, method: handle}

    ongr_monitoring.terminate_listener:
        class: %ongr_monitoring.terminate_listener.class%
        calls:
            - [setManager, [@ongr_monitoring.es_manager]]
            - [setEventParser, [@ongr_monitoring.event_parser]]
            - [setEventIdManager, [@ongr_monitoring.event_id_manager]]
        tags:
            - { name: kernel.event_listener, event: console.terminate, method: handle }

    ongr_monitoring.metric_collector:
        class: %ongr_monitoring.metric_collector.class%
        arguments:
            - @ongr_monitoring.es_manager

    ongr_monitoring.metric.document_count:
        class: %ongr_monitoring.metric.document_count.class%
        arguments:
            - @ongr_monitoring.es_manager
            - product
        tags:
            - {name: ongr_monitoring.metric, metric: product }
